<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zgqk.dao.ContentMapper" >
  <resultMap id="BaseResultMap" type="com.zgqk.bean.Content" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="title_num" property="titleNum" jdbcType="INTEGER" />
    <result column="super_num" property="superNum" jdbcType="INTEGER" />
    <result column="num" property="num" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="category" property="category" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, title_num, super_num, num, state, category
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zgqk.bean.ContentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from content
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from content
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zgqk.bean.ContentExample" >
    delete from content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zgqk.bean.Content" >
    insert into content (id, title, title_num, 
      super_num, num, state, 
      category)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{titleNum,jdbcType=INTEGER}, 
      #{superNum,jdbcType=INTEGER}, #{num,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{category,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zgqk.bean.Content" >
    insert into content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="titleNum != null" >
        title_num,
      </if>
      <if test="superNum != null" >
        super_num,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="category != null" >
        category,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="titleNum != null" >
        #{titleNum,jdbcType=INTEGER},
      </if>
      <if test="superNum != null" >
        #{superNum,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zgqk.bean.ContentExample" resultType="java.lang.Integer" >
    select count(*) from content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update content
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.titleNum != null" >
        title_num = #{record.titleNum,jdbcType=INTEGER},
      </if>
      <if test="record.superNum != null" >
        super_num = #{record.superNum,jdbcType=INTEGER},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update content
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      title_num = #{record.titleNum,jdbcType=INTEGER},
      super_num = #{record.superNum,jdbcType=INTEGER},
      num = #{record.num,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      category = #{record.category,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zgqk.bean.Content" >
    update content
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="titleNum != null" >
        title_num = #{titleNum,jdbcType=INTEGER},
      </if>
      <if test="superNum != null" >
        super_num = #{superNum,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zgqk.bean.Content" >
    update content
    set title = #{title,jdbcType=VARCHAR},
      title_num = #{titleNum,jdbcType=INTEGER},
      super_num = #{superNum,jdbcType=INTEGER},
      num = #{num,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      category = #{category,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findBySupernum" parameterType="Map" resultType="Map">
    select
        id,title,title_num titleNum,super_num superNum,num,state,category
    from
        content
    where
        super_num = #{superNum}
  </select>
  <select id="findByCategory" parameterType="Map" resultType="Map">
    select
        id,title,title_num titleNum,super_num superNum,num,state,category
    from
        content
    where
        category = #{category}
  </select>
  <select id="findByState" parameterType="Map" resultType="Map">
    select
        id,title,title_num titleNum,super_num superNum,num,state,category
    from
        content
    where
        state='1' and category = #{category}
  </select>

</mapper>